{"name": "test_ingredient_counter_increases[firefox]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_main_functions.TestMainFunction object at 0x1044c2af0>, setup_home_page = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"8f5a4bb1-177e-42e5-80ef-d1a69efe4325\")>\n\n    def test_ingredient_counter_increases(self, setup_home_page):\n        driver = setup_home_page\n        add_ingredient = BasePage(driver)\n>       assert add_ingredient.ingredient_counter_increases()\n\ntests/test_main_functions.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:98: in ingredient_counter_increases\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8f5a4bb1-177e-42e5-80ef-d1a69efe4325\")>, method = <function BasePage.ingredient_counter_increases.<locals>.<lambda> at 0x1045ca040>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Поиск ингредиента", "status": "passed", "start": 1730900528662, "stop": 1730900528676}, {"name": "Поиск корзины", "status": "passed", "start": 1730900528676, "stop": 1730900528681}, {"name": "Поиск счетчика ингредиента", "status": "passed", "start": 1730900528682, "stop": 1730900528686}, {"name": "Получение текущего значения счетчика ингредиента", "status": "passed", "start": 1730900528686, "stop": 1730900528689}, {"name": "Инициализация ActionChains", "status": "passed", "start": 1730900528689, "stop": 1730900528689}, {"name": "Перетаскивание элемента", "status": "passed", "start": 1730900528689, "stop": 1730900529226}, {"name": "Ожидание изменения значения счетчика", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/milanradonich/PycharmProjects/Diplom/diplom_3/pages/base_page.py\", line 98, in ingredient_counter_increases\n    WebDriverWait(self.driver, 10).until(\n  File \"/Users/milanradonich/PycharmProjects/Diplom/diplom_3/.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1730900529226, "stop": 1730900539731}], "parameters": [{"name": "driver_setup", "value": "'firefox'"}], "start": 1730900528661, "stop": 1730900539732, "uuid": "b7a33aec-8fa6-493d-97d2-e031f5bc30d9", "historyId": "fcec7c58c75ec7d6e37ff0dbd35239f6", "testCaseId": "8e9048de8a6c5a78abad21a654652b1e", "fullName": "tests.test_main_functions.TestMainFunction#test_ingredient_counter_increases", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functions"}, {"name": "subSuite", "value": "TestMainFunction"}, {"name": "host", "value": "MacBook-Air-Milan.local"}, {"name": "thread", "value": "87646-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functions"}]}